buildscript {

    ext {
        artifactGroup = "pl.garciapl.consul"
        artifactName = "consul-pusher"
        artifactVersion = "1.0.0-SNAPSHOT"

        springBootVersion = "1.5.9.RELEASE"
        cfg4jVersion = "4.4.0"
        orbitzVersion = "0.12.7"
        guavaVersion = "19.0"
        gsonVersion = "2.7"
        apacheCommonsIo = "2.5"
        apacheCommonsCli = "1.3.1"
        slf4jVersion = "1.7.12"
        logbackVersion = "1.2.3"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: "org.springframework.boot", name: "spring-boot-gradle-plugin", version: "${springBootVersion}"
    }
}

// ----------- Plugins -----------
apply plugin: "java"
apply plugin: "spring-boot"
apply plugin: "idea"

// ----------- Repositories -----------
repositories {
    mavenLocal()
    mavenCentral()
}

// ----------- External module dependencies -----------
dependencies {

    compile group: "org.slf4j", name: "slf4j-api", version: "${slf4jVersion}"
    compile group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"

    compile group: "org.springframework.boot", name: "spring-boot-starter", version: "${springBootVersion}"

    compile group: "org.cfg4j", name: "cfg4j-core", version: "${cfg4jVersion}"
    compile group: "com.orbitz.consul", name: "consul-client", version: "${orbitzVersion}"

    compile group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    compile group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"
    compile group: 'commons-io', name: 'commons-io', version: "${apacheCommonsIo}"
    compile group: 'commons-cli', name: 'commons-cli', version: "${apacheCommonsCli}"
}

// ----------- EXTRA tasks -----------

// Generate Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = "2.4"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// ----------- Task configurations -----------
defaultTasks "clean", "build"

// ----------- Task configurations -----------
jar {
    baseName = "${artifactName}"
    version = "${artifactVersion}"
}